// dllmain.cpp : 定义 DLL 应用程序的入口点。

#include "speedhack.h"

#pragma comment(linker, "/export:CloseDriver=winmm_1.CloseDriver")
#pragma comment(linker, "/export:DefDriverProc=winmm_1.DefDriverProc")
#pragma comment(linker, "/export:DriverCallback=winmm_1.DriverCallback")
#pragma comment(linker, "/export:DrvGetModuleHandle=winmm_1.DrvGetModuleHandle")
#pragma comment(linker, "/export:GetDriverModuleHandle=winmm_1.GetDriverModuleHandle")
#pragma comment(linker, "/export:NotifyCallbackData=winmm_1.NotifyCallbackData")
#pragma comment(linker, "/export:OpenDriver=winmm_1.OpenDriver")
#pragma comment(linker, "/export:PlaySound=winmm_1.PlaySound")
#pragma comment(linker, "/export:PlaySoundA=winmm_1.PlaySoundA")
#pragma comment(linker, "/export:PlaySoundW=winmm_1.PlaySoundW")
#pragma comment(linker, "/export:SendDriverMessage=winmm_1.SendDriverMessage")
#pragma comment(linker, "/export:WOW32DriverCallback=winmm_1.WOW32DriverCallback")
#pragma comment(linker, "/export:WOW32ResolveMultiMediaHandle=winmm_1.WOW32ResolveMultiMediaHandle")
#pragma comment(linker, "/export:WOWAppExit=winmm_1.WOWAppExit")
#pragma comment(linker, "/export:aux32Message=winmm_1.aux32Message")
#pragma comment(linker, "/export:auxGetDevCapsA=winmm_1.auxGetDevCapsA")
#pragma comment(linker, "/export:auxGetDevCapsW=winmm_1.auxGetDevCapsW")
#pragma comment(linker, "/export:auxGetNumDevs=winmm_1.auxGetNumDevs")
#pragma comment(linker, "/export:auxGetVolume=winmm_1.auxGetVolume")
#pragma comment(linker, "/export:auxOutMessage=winmm_1.auxOutMessage")
#pragma comment(linker, "/export:auxSetVolume=winmm_1.auxSetVolume")
#pragma comment(linker, "/export:joy32Message=winmm_1.joy32Message")
#pragma comment(linker, "/export:joyConfigChanged=winmm_1.joyConfigChanged")
#pragma comment(linker, "/export:joyGetDevCapsA=winmm_1.joyGetDevCapsA")
#pragma comment(linker, "/export:joyGetDevCapsW=winmm_1.joyGetDevCapsW")
#pragma comment(linker, "/export:joyGetNumDevs=winmm_1.joyGetNumDevs")
#pragma comment(linker, "/export:joyGetPos=winmm_1.joyGetPos")
#pragma comment(linker, "/export:joyGetPosEx=winmm_1.joyGetPosEx")
#pragma comment(linker, "/export:joyGetThreshold=winmm_1.joyGetThreshold")
#pragma comment(linker, "/export:joyReleaseCapture=winmm_1.joyReleaseCapture")
#pragma comment(linker, "/export:joySetCapture=winmm_1.joySetCapture")
#pragma comment(linker, "/export:joySetThreshold=winmm_1.joySetThreshold")
#pragma comment(linker, "/export:mci32Message=winmm_1.mci32Message")
#pragma comment(linker, "/export:mciDriverNotify=winmm_1.mciDriverNotify")
#pragma comment(linker, "/export:mciDriverYield=winmm_1.mciDriverYield")
#pragma comment(linker, "/export:mciExecute=winmm_1.mciExecute")
#pragma comment(linker, "/export:mciFreeCommandResource=winmm_1.mciFreeCommandResource")
#pragma comment(linker, "/export:mciGetCreatorTask=winmm_1.mciGetCreatorTask")
#pragma comment(linker, "/export:mciGetDeviceIDA=winmm_1.mciGetDeviceIDA")
#pragma comment(linker, "/export:mciGetDeviceIDFromElementIDA=winmm_1.mciGetDeviceIDFromElementIDA")
#pragma comment(linker, "/export:mciGetDeviceIDFromElementIDW=winmm_1.mciGetDeviceIDFromElementIDW")
#pragma comment(linker, "/export:mciGetDeviceIDW=winmm_1.mciGetDeviceIDW")
#pragma comment(linker, "/export:mciGetDriverData=winmm_1.mciGetDriverData")
#pragma comment(linker, "/export:mciGetErrorStringA=winmm_1.mciGetErrorStringA")
#pragma comment(linker, "/export:mciGetErrorStringW=winmm_1.mciGetErrorStringW")
#pragma comment(linker, "/export:mciGetYieldProc=winmm_1.mciGetYieldProc")
#pragma comment(linker, "/export:mciLoadCommandResource=winmm_1.mciLoadCommandResource")
#pragma comment(linker, "/export:mciSendCommandA=winmm_1.mciSendCommandA")
#pragma comment(linker, "/export:mciSendCommandW=winmm_1.mciSendCommandW")
#pragma comment(linker, "/export:mciSendStringA=winmm_1.mciSendStringA")
#pragma comment(linker, "/export:mciSendStringW=winmm_1.mciSendStringW")
#pragma comment(linker, "/export:mciSetDriverData=winmm_1.mciSetDriverData")
#pragma comment(linker, "/export:mciSetYieldProc=winmm_1.mciSetYieldProc")
#pragma comment(linker, "/export:mid32Message=winmm_1.mid32Message")
#pragma comment(linker, "/export:midiConnect=winmm_1.midiConnect")
#pragma comment(linker, "/export:midiDisconnect=winmm_1.midiDisconnect")
#pragma comment(linker, "/export:midiInAddBuffer=winmm_1.midiInAddBuffer")
#pragma comment(linker, "/export:midiInClose=winmm_1.midiInClose")
#pragma comment(linker, "/export:midiInGetDevCapsA=winmm_1.midiInGetDevCapsA")
#pragma comment(linker, "/export:midiInGetDevCapsW=winmm_1.midiInGetDevCapsW")
#pragma comment(linker, "/export:midiInGetErrorTextA=winmm_1.midiInGetErrorTextA")
#pragma comment(linker, "/export:midiInGetErrorTextW=winmm_1.midiInGetErrorTextW")
#pragma comment(linker, "/export:midiInGetID=winmm_1.midiInGetID")
#pragma comment(linker, "/export:midiInGetNumDevs=winmm_1.midiInGetNumDevs")
#pragma comment(linker, "/export:midiInMessage=winmm_1.midiInMessage")
#pragma comment(linker, "/export:midiInOpen=winmm_1.midiInOpen")
#pragma comment(linker, "/export:midiInPrepareHeader=winmm_1.midiInPrepareHeader")
#pragma comment(linker, "/export:midiInReset=winmm_1.midiInReset")
#pragma comment(linker, "/export:midiInStart=winmm_1.midiInStart")
#pragma comment(linker, "/export:midiInStop=winmm_1.midiInStop")
#pragma comment(linker, "/export:midiInUnprepareHeader=winmm_1.midiInUnprepareHeader")
#pragma comment(linker, "/export:midiOutCacheDrumPatches=winmm_1.midiOutCacheDrumPatches")
#pragma comment(linker, "/export:midiOutCachePatches=winmm_1.midiOutCachePatches")
#pragma comment(linker, "/export:midiOutClose=winmm_1.midiOutClose")
#pragma comment(linker, "/export:midiOutGetDevCapsA=winmm_1.midiOutGetDevCapsA")
#pragma comment(linker, "/export:midiOutGetDevCapsW=winmm_1.midiOutGetDevCapsW")
#pragma comment(linker, "/export:midiOutGetErrorTextA=winmm_1.midiOutGetErrorTextA")
#pragma comment(linker, "/export:midiOutGetErrorTextW=winmm_1.midiOutGetErrorTextW")
#pragma comment(linker, "/export:midiOutGetID=winmm_1.midiOutGetID")
#pragma comment(linker, "/export:midiOutGetNumDevs=winmm_1.midiOutGetNumDevs")
#pragma comment(linker, "/export:midiOutGetVolume=winmm_1.midiOutGetVolume")
#pragma comment(linker, "/export:midiOutLongMsg=winmm_1.midiOutLongMsg")
#pragma comment(linker, "/export:midiOutMessage=winmm_1.midiOutMessage")
#pragma comment(linker, "/export:midiOutOpen=winmm_1.midiOutOpen")
#pragma comment(linker, "/export:midiOutPrepareHeader=winmm_1.midiOutPrepareHeader")
#pragma comment(linker, "/export:midiOutReset=winmm_1.midiOutReset")
#pragma comment(linker, "/export:midiOutSetVolume=winmm_1.midiOutSetVolume")
#pragma comment(linker, "/export:midiOutShortMsg=winmm_1.midiOutShortMsg")
#pragma comment(linker, "/export:midiOutUnprepareHeader=winmm_1.midiOutUnprepareHeader")
#pragma comment(linker, "/export:midiStreamClose=winmm_1.midiStreamClose")
#pragma comment(linker, "/export:midiStreamOpen=winmm_1.midiStreamOpen")
#pragma comment(linker, "/export:midiStreamOut=winmm_1.midiStreamOut")
#pragma comment(linker, "/export:midiStreamPause=winmm_1.midiStreamPause")
#pragma comment(linker, "/export:midiStreamPosition=winmm_1.midiStreamPosition")
#pragma comment(linker, "/export:midiStreamProperty=winmm_1.midiStreamProperty")
#pragma comment(linker, "/export:midiStreamRestart=winmm_1.midiStreamRestart")
#pragma comment(linker, "/export:midiStreamStop=winmm_1.midiStreamStop")
#pragma comment(linker, "/export:mixerClose=winmm_1.mixerClose")
#pragma comment(linker, "/export:mixerGetControlDetailsA=winmm_1.mixerGetControlDetailsA")
#pragma comment(linker, "/export:mixerGetControlDetailsW=winmm_1.mixerGetControlDetailsW")
#pragma comment(linker, "/export:mixerGetDevCapsA=winmm_1.mixerGetDevCapsA")
#pragma comment(linker, "/export:mixerGetDevCapsW=winmm_1.mixerGetDevCapsW")
#pragma comment(linker, "/export:mixerGetID=winmm_1.mixerGetID")
#pragma comment(linker, "/export:mixerGetLineControlsA=winmm_1.mixerGetLineControlsA")
#pragma comment(linker, "/export:mixerGetLineControlsW=winmm_1.mixerGetLineControlsW")
#pragma comment(linker, "/export:mixerGetLineInfoA=winmm_1.mixerGetLineInfoA")
#pragma comment(linker, "/export:mixerGetLineInfoW=winmm_1.mixerGetLineInfoW")
#pragma comment(linker, "/export:mixerGetNumDevs=winmm_1.mixerGetNumDevs")
#pragma comment(linker, "/export:mixerMessage=winmm_1.mixerMessage")
#pragma comment(linker, "/export:mixerOpen=winmm_1.mixerOpen")
#pragma comment(linker, "/export:mixerSetControlDetails=winmm_1.mixerSetControlDetails")
#pragma comment(linker, "/export:mmDrvInstall=winmm_1.mmDrvInstall")
#pragma comment(linker, "/export:mmGetCurrentTask=winmm_1.mmGetCurrentTask")
#pragma comment(linker, "/export:mmTaskBlock=winmm_1.mmTaskBlock")
#pragma comment(linker, "/export:mmTaskCreate=winmm_1.mmTaskCreate")
#pragma comment(linker, "/export:mmTaskSignal=winmm_1.mmTaskSignal")
#pragma comment(linker, "/export:mmTaskYield=winmm_1.mmTaskYield")
#pragma comment(linker, "/export:mmioAdvance=winmm_1.mmioAdvance")
#pragma comment(linker, "/export:mmioAscend=winmm_1.mmioAscend")
#pragma comment(linker, "/export:mmioClose=winmm_1.mmioClose")
#pragma comment(linker, "/export:mmioCreateChunk=winmm_1.mmioCreateChunk")
#pragma comment(linker, "/export:mmioDescend=winmm_1.mmioDescend")
#pragma comment(linker, "/export:mmioFlush=winmm_1.mmioFlush")
#pragma comment(linker, "/export:mmioGetInfo=winmm_1.mmioGetInfo")
#pragma comment(linker, "/export:mmioInstallIOProcA=winmm_1.mmioInstallIOProcA")
#pragma comment(linker, "/export:mmioInstallIOProcW=winmm_1.mmioInstallIOProcW")
#pragma comment(linker, "/export:mmioOpenA=winmm_1.mmioOpenA")
#pragma comment(linker, "/export:mmioOpenW=winmm_1.mmioOpenW")
#pragma comment(linker, "/export:mmioRead=winmm_1.mmioRead")
#pragma comment(linker, "/export:mmioRenameA=winmm_1.mmioRenameA")
#pragma comment(linker, "/export:mmioRenameW=winmm_1.mmioRenameW")
#pragma comment(linker, "/export:mmioSeek=winmm_1.mmioSeek")
#pragma comment(linker, "/export:mmioSendMessage=winmm_1.mmioSendMessage")
#pragma comment(linker, "/export:mmioSetBuffer=winmm_1.mmioSetBuffer")
#pragma comment(linker, "/export:mmioSetInfo=winmm_1.mmioSetInfo")
#pragma comment(linker, "/export:mmioStringToFOURCCA=winmm_1.mmioStringToFOURCCA")
#pragma comment(linker, "/export:mmioStringToFOURCCW=winmm_1.mmioStringToFOURCCW")
#pragma comment(linker, "/export:mmioWrite=winmm_1.mmioWrite")
#pragma comment(linker, "/export:mmsystemGetVersion=winmm_1.mmsystemGetVersion")
#pragma comment(linker, "/export:mod32Message=winmm_1.mod32Message")
#pragma comment(linker, "/export:mxd32Message=winmm_1.mxd32Message")
#pragma comment(linker, "/export:sndPlaySoundA=winmm_1.sndPlaySoundA")
#pragma comment(linker, "/export:sndPlaySoundW=winmm_1.sndPlaySoundW")
#pragma comment(linker, "/export:tid32Message=winmm_1.tid32Message")
#pragma comment(linker, "/export:timeBeginPeriod=winmm_1.timeBeginPeriod")
#pragma comment(linker, "/export:timeEndPeriod=winmm_1.timeEndPeriod")
#pragma comment(linker, "/export:timeGetDevCaps=winmm_1.timeGetDevCaps")
#pragma comment(linker, "/export:timeGetSystemTime=winmm_1.timeGetSystemTime")
#pragma comment(linker, "/export:timeGetTime=winmm_1.timeGetTime")
#pragma comment(linker, "/export:timeKillEvent=winmm_1.timeKillEvent")
#pragma comment(linker, "/export:timeSetEvent=winmm_1.timeSetEvent")
#pragma comment(linker, "/export:waveInAddBuffer=winmm_1.waveInAddBuffer")
#pragma comment(linker, "/export:waveInClose=winmm_1.waveInClose")
#pragma comment(linker, "/export:waveInGetDevCapsA=winmm_1.waveInGetDevCapsA")
#pragma comment(linker, "/export:waveInGetDevCapsW=winmm_1.waveInGetDevCapsW")
#pragma comment(linker, "/export:waveInGetErrorTextA=winmm_1.waveInGetErrorTextA")
#pragma comment(linker, "/export:waveInGetErrorTextW=winmm_1.waveInGetErrorTextW")
#pragma comment(linker, "/export:waveInGetID=winmm_1.waveInGetID")
#pragma comment(linker, "/export:waveInGetNumDevs=winmm_1.waveInGetNumDevs")
#pragma comment(linker, "/export:waveInGetPosition=winmm_1.waveInGetPosition")
#pragma comment(linker, "/export:waveInMessage=winmm_1.waveInMessage")
#pragma comment(linker, "/export:waveInOpen=winmm_1.waveInOpen")
#pragma comment(linker, "/export:waveInPrepareHeader=winmm_1.waveInPrepareHeader")
#pragma comment(linker, "/export:waveInReset=winmm_1.waveInReset")
#pragma comment(linker, "/export:waveInStart=winmm_1.waveInStart")
#pragma comment(linker, "/export:waveInStop=winmm_1.waveInStop")
#pragma comment(linker, "/export:waveInUnprepareHeader=winmm_1.waveInUnprepareHeader")
#pragma comment(linker, "/export:waveOutBreakLoop=winmm_1.waveOutBreakLoop")
#pragma comment(linker, "/export:waveOutClose=winmm_1.waveOutClose")
#pragma comment(linker, "/export:waveOutGetDevCapsA=winmm_1.waveOutGetDevCapsA")
#pragma comment(linker, "/export:waveOutGetDevCapsW=winmm_1.waveOutGetDevCapsW")
#pragma comment(linker, "/export:waveOutGetErrorTextA=winmm_1.waveOutGetErrorTextA")
#pragma comment(linker, "/export:waveOutGetErrorTextW=winmm_1.waveOutGetErrorTextW")
#pragma comment(linker, "/export:waveOutGetID=winmm_1.waveOutGetID")
#pragma comment(linker, "/export:waveOutGetNumDevs=winmm_1.waveOutGetNumDevs")
#pragma comment(linker, "/export:waveOutGetPitch=winmm_1.waveOutGetPitch")
#pragma comment(linker, "/export:waveOutGetPlaybackRate=winmm_1.waveOutGetPlaybackRate")
#pragma comment(linker, "/export:waveOutGetPosition=winmm_1.waveOutGetPosition")
#pragma comment(linker, "/export:waveOutGetVolume=winmm_1.waveOutGetVolume")
#pragma comment(linker, "/export:waveOutMessage=winmm_1.waveOutMessage")
#pragma comment(linker, "/export:waveOutOpen=winmm_1.waveOutOpen")
#pragma comment(linker, "/export:waveOutPause=winmm_1.waveOutPause")
#pragma comment(linker, "/export:waveOutPrepareHeader=winmm_1.waveOutPrepareHeader")
#pragma comment(linker, "/export:waveOutReset=winmm_1.waveOutReset")
#pragma comment(linker, "/export:waveOutRestart=winmm_1.waveOutRestart")
#pragma comment(linker, "/export:waveOutSetPitch=winmm_1.waveOutSetPitch")
#pragma comment(linker, "/export:waveOutSetPlaybackRate=winmm_1.waveOutSetPlaybackRate")
#pragma comment(linker, "/export:waveOutSetVolume=winmm_1.waveOutSetVolume")
#pragma comment(linker, "/export:waveOutUnprepareHeader=winmm_1.waveOutUnprepareHeader")
#pragma comment(linker, "/export:waveOutWrite=winmm_1.waveOutWrite")
#pragma comment(linker, "/export:wid32Message=winmm_1.wid32Message")
#pragma comment(linker, "/export:wod32Message=winmm_1.wod32Message")

DWORD WINAPI MainThread(LPVOID lpParam)
{
    Speedhack::Setup();
    Speedhack::SetSpeed(500); //speed up 500 
    return 0;
}

BOOL APIENTRY DllMain( HMODULE hModule,
                       DWORD  ul_reason_for_call,
                       LPVOID lpReserved
                     )
{
    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH: {
        //MessageBoxA(NULL, "test", "test", 0);
        // 获取当前的命令行
        LPWSTR lpBuffer = GetCommandLineW();
        //MessageBox(NULL, lpBuffer, L"version", 0);
        int pNumArgs;
        LPWSTR* cmd = CommandLineToArgvW(lpBuffer, &pNumArgs);
        WCHAR version[100] = { 0 };
        if (pNumArgs > 2 && !wcscmp(cmd[2], L"1000")) {
            // get process
            lstrcpyW(version, cmd[16]); // getversion      
            if (wcscmp(version, L"7.25.0.4") <= 0) {
                //MessageBox(NULL, L"version", version, 0);
                CreateThread(0, 0x1000, &MainThread, NULL, 0, NULL);
            }
        }

    }

    case DLL_THREAD_ATTACH:
    case DLL_THREAD_DETACH:
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}

